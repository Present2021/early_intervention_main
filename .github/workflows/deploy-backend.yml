on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/deploy-backend.yml'
      - 'backend/**'
      - '!backend/*.md'

env:
  BRANCH_NAME: main
  PROJECT_PATH: '/home/ubuntu/projects/tainan-eci-allowance/tainan-eci-allowance-backend'
  SUB_FOLDER: backend

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Add SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          SERVER_HOSTNAME: ${{ secrets.DEV_SERVER_HOSTNAME }}
          SERVER_USER: ubuntu
        run: |
          mkdir -p ~/.ssh/
          # put ssh key
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # write ssh config
          printf "Host server\n\tHostName ${SERVER_HOSTNAME}\n\tUser ${SERVER_USER}" >> ~/.ssh/config
          # test ssh connection
          ssh -tt -o StrictHostKeyChecking=no server "echo ssh successful"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_NAME }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.16

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64

      - name: Login Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Image and Push
        run: |
          docker buildx build \
            --pull --push \
            --platform linux/amd64 \
            --tag ghcr.io/${GITHUB_REPOSITORY,,}:backend-api-dev \
            --cache-to type=registry,ref=ghcr.io/${GITHUB_REPOSITORY,,}:backend-api-dev-build-cache,mode=max \
            --cache-from type=registry,ref=ghcr.io/${GITHUB_REPOSITORY,,}:backend-api-dev-build-cache \
            ${{ env.SUB_FOLDER }}/

      - name: Deploy
        run: |
          ssh server  -o 'RequestTTY=force' "
            sudo su - -c '
              cd ${{ env.PROJECT_PATH }} &&
              docker pull ghcr.io/${GITHUB_REPOSITORY,,}:backend-api-dev &&
              docker images &&
              docker compose up -d &&
              docker compose exec express  npm run migrate
              (docker image prune --force || true)
            '
          "
